initSidebarItems({"mod":[["claims","Credential Claims module."]],"struct":[["AutoRefreshingProviderFuture","Future returned from `AutoRefreshingProvider`."],["AwsCredentials","AWS API access credentials, including access key, secret key, token (for IAM profiles), expiration timestamp, and claims from federated login."],["BaseAutoRefreshingProvider","Wrapper for `ProvideAwsCredentials` that caches the credentials returned by the wrapped provider.  Each time the credentials are accessed, they are checked to see if they have expired, in which case they are retrieved from the wrapped provider again."],["ChainProvider","Provides AWS credentials from multiple possible sources using a priority order."],["ChainProviderFuture","Future returned from `ChainProvider`."],["ContainerProvider","Provides AWS credentials from a task's IAM role."],["ContainerProviderFuture","Future returned from `ContainerProvider`."],["CredentialsError","Represents an Error that has occured during the fetching Credentials Phase."],["EnvironmentProvider","Provides AWS credentials from environment variables."],["EnvironmentProviderFuture","Provides AWS credentials from environment variables as a Future."],["InstanceMetadataProvider","Provides AWS credentials from a resource's IAM role."],["InstanceMetadataProviderFuture","Future returned from `InstanceMetadataProvider`."],["ProfileProvider","Provides AWS credentials from a profile in a credentials file."],["ProfileProviderFuture","Provides AWS credentials from a profile in a credentials file as a Future."],["StaticProvider","Provides AWS credentials from statically/programmatically provided strings."]],"trait":[["ProvideAwsCredentials","A trait for types that produce `AwsCredentials`."]],"type":[["AutoRefreshingProvider","`!Sync` `AutoRefreshingProvider` that caches credentials in a `RefCell`"],["AutoRefreshingProviderSync","Threadsafe `AutoRefreshingProvider` that locks cached credentials with a `Mutex`"],["DefaultCredentialsProvider","The credentials provider you probably want to use if you don't require Sync for your AWS services. Wraps a `ChainProvider` in an `AutoRefreshingProvider` that uses a `RefCell` to cache credentials"],["DefaultCredentialsProviderSync","The credentials provider you probably want to use if you do require Sync for your AWS services. Wraps a `ChainProvider` in an `AutoRefreshingProvider` that uses a `Mutex` to lock credentials in a threadsafe manner."]]});